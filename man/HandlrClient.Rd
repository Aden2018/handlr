% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client.R
\docType{data}
\name{HandlrClient}
\alias{HandlrClient}
\title{handlr client}
\arguments{
\item{x}{(character) a file path (the file must exist) or a string
containing contents of the citation}
}
\description{
handlr client
}
\details{
\strong{Methods}
\itemize{
\item \code{read(format = NULL, ...)} - read input
\itemize{
\item \code{format}: one of citeproc, ris, bibtex, codemeta, or \code{NULL}. If \code{NULL},
we attempt to guess the format, and error if we can not guess
\item \code{...}: further args to the writer fxn, if any
}
\item \code{write(format, file = NULL, ...)} - write to std out or file
\itemize{
\item \code{format}: one of citeproc, ris, bibtex, rdfxml
\item \code{file}: a file path, if NULL to stdout
\item \code{...}: further args to the writer fxn, if any
\item Note: If \code{$parsed} is \code{NULL} then it's likely \code{$read()} has not
been run - in which case we attempt to run \code{$read()} to
populate \code{$parsed}
}
}
}
\examples{
# read() can be run with format specified or not
# if format not given, we attempt to guess the format and then read
z <- system.file('extdata/citeproc.json', package = "handlr")
(x <- HandlrClient$new(x = z))
x$read()
x$read("citeproc")

# you can run read() then write() 
# or just run write(), and read() will be run for you if possible
z <- system.file('extdata/citeproc.json', package = "handlr")
(x <- HandlrClient$new(x = z))
cat(x$write("ris"))


# Example of specific formats
# crosscite
z <- system.file('extdata/crosscite.json', package = "handlr")
(x <- HandlrClient$new(x = z))
x$path

# read in citeproc, write out bibtex
z <- system.file('extdata/citeproc.json', package = "handlr")
(x <- HandlrClient$new(x = z))
x$path
x$ext
x$read("citeproc")
x$parsed
x$write("bibtex")
f <- tempfile(fileext = ".bib")
x$write("bibtex", file = f)
readLines(f)
unlink(f)

# read in ris, write out ris
z <- system.file('extdata/peerj.ris', package = "handlr")
(x <- HandlrClient$new(x = z))
x$path
x$format
x$read("ris")
x$parsed
x$write("ris")
cat(x$write("ris"))

# read in bibtex, write out ris
(z <- system.file('extdata/bibtex.bib', package = "handlr"))
(x <- HandlrClient$new(x = z))
x$path
x$format
x$read("bibtex")
x$parsed
x$write("ris")
cat(x$write("ris"))

# read in bibtex, write out RDF XML
(z <- system.file('extdata/bibtex.bib', package = "handlr"))
(x <- HandlrClient$new(x = z))
x$path
x$format
x$read("bibtex")
x$parsed
x$write("rdfxml")
cat(x$write("rdfxml"))

# codemeta
(z <- system.file('extdata/codemeta.json', package = "handlr"))
(x <- HandlrClient$new(x = z))
x$path
x$format
x$read("codemeta")
x$parsed
x$write("codemeta")

# handle strings instead of files
z <- system.file('extdata/citeproc-crossref.json', package = "handlr")
(x <- HandlrClient$new(x = readLines(z)))
x$read("citeproc")
x$parsed
cat(x$write("bibtex"), sep = "\\n")
}
\keyword{datasets}
